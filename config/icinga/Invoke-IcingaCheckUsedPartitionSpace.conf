object CheckCommand "Invoke-IcingaCheckUsedPartitionSpace" {
    import "PowerShell Base"

    arguments += {
        "-C" = {
            value = "try { Use-Icinga; } catch { Write-Output 'The Icinga PowerShell Framework is either not installed on the system or not configured properly. Please check https://icinga.com/docs/windows for further details'; exit 3; }; Exit-IcingaPluginNotInstalled 'Invoke-IcingaCheckUsedPartitionSpace'; exit Invoke-IcingaCheckUsedPartitionSpace"
            order = 0
        }
        "-Verbosity" = {
            description = "Changes the behavior of the plugin output which check states are printed: 0 (default): Only service checks/packages with state not OK will be printed 1: Only services with not OK will be printed including OK checks of affected check packages including Package config 2: Everything will be printed regardless of the check state"
            value = "$IcingaCheckUsedPartitionSpace_Int32_Verbosity$"
            order = 6
        }
        "-Warning" = {
            description = "Used to specify a Warning threshold. In this case an integer value."
            value = "$IcingaCheckUsedPartitionSpace_Object_Warning$"
            order = 2
        }
        "-IgnoreEmptyChecks" = {
            set_if = "$IcingaCheckUsedPartitionSpace_Switchparameter_IgnoreEmptyChecks$"
            set_if_format = "string"
            order = 99
        }
        "-Include" = {
            description = "Used to specify an array of partitions to be included. If not set, the check expects that all not excluded partitions should be checked. e.g. 'C:\','D:\'"
            value = {{
                var arr = macro("$IcingaCheckUsedPartitionSpace_Array_Include$");
                if (len(arr) == 0) {
                return "@()";
                }
                return arr.join(",");
            }}
            order = 4
        }
        "-Critical" = {
            description = "Used to specify a Critical threshold. In this case an integer value."
            value = "$IcingaCheckUsedPartitionSpace_Object_Critical$"
            order = 3
        }
        "-NoPerfData" = {
            set_if = "$IcingaCheckUsedPartitionSpace_Switchparameter_NoPerfData$"
            set_if_format = "string"
            order = 99
        }
        "-Exclude" = {
            description = "Used to specify an array of partitions to be excluded. e.g. 'C:\','D:\'"
            value = {{
                var arr = macro("$IcingaCheckUsedPartitionSpace_Array_Exclude$");
                if (len(arr) == 0) {
                return "@()";
                }
                return arr.join(",");
            }}
            order = 5
        }
        "-SkipUnknown" = {
            set_if = "$IcingaCheckUsedPartitionSpace_Switchparameter_SkipUnknown$"
            set_if_format = "string"
            order = 99
        }
    }
    vars.IcingaCheckUsedPartitionSpace_Switchparameter_SkipUnknown = False
    vars.IcingaCheckUsedPartitionSpace_Switchparameter_IgnoreEmptyChecks = False
    vars.IcingaCheckUsedPartitionSpace_Switchparameter_NoPerfData = False
}
