object CheckCommand "Invoke-IcingaCheckService" {
    import "PowerShell Base"

    arguments += {
        "-Verbosity" = {
            description = "Changes the behavior of the plugin output which check states are printed: 0 (default): Only service checks/packages with state not OK will be printed 1: Only services with not OK will be printed including OK checks of affected check packages including Package config 2: Everything will be printed regardless of the check state"
            value = "$IcingaCheckService_Int32_Verbosity$"
            order = 5
        }
        "-Status" = {
            description = "Status for the specified service or services to check against."
            value = "$IcingaCheckService_String_Status$"
            order = 4
        }
        "-NoPerfData" = {
            set_if = "$IcingaCheckService_Switchparameter_NoPerfData$"
            order = 99
        }
        "-Service" = {
            description = "Used to specify an array of services which should be checked against the status. Supports '*' for wildcards."
            value = {{
                var arr = macro("$IcingaCheckService_Array_Service$");
                if (len(arr) == 0) {
                return "@()";
                }
                return arr.join(",");
            }}
            order = 2
        }
        "-Exclude" = {
            description = "Allows to exclude services which might come in handy for checking services which are configured to start automatically on Windows but are not running and weren't exited properly."
            value = {{
                var arr = macro("$IcingaCheckService_Array_Exclude$");
                if (len(arr) == 0) {
                return "@()";
                }
                return arr.join(",");
            }}
            order = 3
        }
        "-C" = {
            value = "try { Use-Icinga; } catch { Write-Output 'The Icinga PowerShell Framework is either not installed on the system or not configured properly. Please check https://icinga.com/docs/windows for further details'; exit 3; }; Exit-IcingaPluginNotInstalled 'Invoke-IcingaCheckService'; exit Invoke-IcingaCheckService"
            order = 0
        }
    }
    vars.IcingaCheckService_Switchparameter_NoPerfData = false
}
