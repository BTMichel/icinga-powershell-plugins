object CheckCommand "Invoke-IcingaCheckCheckSum" {
    import "PowerShell Base"

    arguments += {
        "-C" = {
            value = "try { Use-Icinga -Minimal; } catch { Write-Output 'The Icinga PowerShell Framework is either not installed on the system or not configured properly. Please check https://icinga.com/docs/windows for further details'; exit 3; }; Exit-IcingaExecutePlugin -Command 'Invoke-IcingaCheckCheckSum' "
            order = 0
        }
        "-Path" = {
            value = "$IcingaCheckCheckSum_String_Path$"
            order = 2
        }
        "-Verbosity" = {
            value = "$IcingaCheckCheckSum_Int32_Verbosity$"
            order = 5
        }
        "-Algorithm" = {
            description = "Used to specify a string, which contains the algorithm to be used.  Allowed algorithms: 'SHA1', 'SHA256', 'SHA384', 'SHA512', 'MD5'"
            value = "$IcingaCheckCheckSum_String_Algorithm$"
            order = 3
        }
        "-ThresholdValue" = {
            description = "Change the value your defined threshold checks against from the current value to a collected time threshold of the Icinga for Windows daemon, as described here: https://icinga.com/docs/icinga-for-windows/latest/doc/service/10-Register-Service-Checks/ An example for this argument would be 1m or 15m which will use the average of 1m or 15m for monitoring."
            value = "$IcingaCheckCheckSum_String_ThresholdValue$"
            order = 100
        }
        "-Hash" = {
            value = "$IcingaCheckCheckSum_String_Hash$"
            order = 4
        }
        "-NoPerfData" = {
            set_if = "$IcingaCheckCheckSum_Switchparameter_NoPerfData$"
            order = 99
        }
    }
    vars.IcingaCheckCheckSum_Switchparameter_NoPerfData = false
}
