object CheckCommand "Invoke-IcingaCheckEventlog" {
    import "PowerShell Base"

    arguments += {
        "-Before" = {
            description = "Used to specify a date like dd.mm.yyyy and every eventlog entry before that date will be considered."
            value = "$IcingaCheckEventlog_Object_Before$"
            order = 16
        }
        "-NoPerfData" = {
            set_if = "$IcingaCheckEventlog_Switchparameter_NoPerfData$"
            set_if_format = "string"
            order = 99
        }
        "-IncludeMessage" = {
            description = "Used to specify an array of messages within the eventlog to be included."
            value = {{
                var arr = macro("$IcingaCheckEventlog_Array_IncludeMessage$");
                if (len(arr) == 0) {
                return "@()";
                }
                return arr.join(",");
            }}
            order = 11
        }
        "-IncludeSource" = {
            description = "Used to specify an array of message sources within the eventlog to be included."
            value = {{
                var arr = macro("$IcingaCheckEventlog_Array_IncludeSource$");
                if (len(arr) == 0) {
                return "@()";
                }
                return arr.join(",");
            }}
            order = 13
        }
        "-After" = {
            description = "Used to specify a date like dd.mm.yyyy and every eventlog entry after that date will be considered."
            value = "$IcingaCheckEventlog_Object_After$"
            order = 15
        }
        "-IncludeEventId" = {
            description = "Used to specify an array of events identified by their id to be included."
            value = {{
                var arr = macro("$IcingaCheckEventlog_Array_IncludeEventId$");
                if (len(arr) == 0) {
                return "@()";
                }
                return arr.join(",");
            }}
            order = 5
        }
        "-LogName" = {
            description = "Used to specify a certain log."
            value = "$IcingaCheckEventlog_String_LogName$"
            order = 4
        }
        "-C" = {
            value = "try { Use-Icinga; } catch { Write-Output 'The Icinga PowerShell Framework is either not installed on the system or not configured properly. Please check https://icinga.com/docs/windows for further details'; exit 3; }; Exit-IcingaPluginNotInstalled 'Invoke-IcingaCheckEventlog'; exit Invoke-IcingaCheckEventlog"
            order = 0
        }
        "-ExcludeSource" = {
            description = "Used to specify an array of message sources within the eventlog to be excluded."
            value = {{
                var arr = macro("$IcingaCheckEventlog_Array_ExcludeSource$");
                if (len(arr) == 0) {
                return "@()";
                }
                return arr.join(",");
            }}
            order = 14
        }
        "-ExcludeUsername" = {
            description = "Used to specify an array of usernames within the eventlog to be excluded."
            value = {{
                var arr = macro("$IcingaCheckEventlog_Array_ExcludeUsername$");
                if (len(arr) == 0) {
                return "@()";
                }
                return arr.join(",");
            }}
            order = 8
        }
        "-ExcludeEntryType" = {
            description = "Used to specify an array of entry types within the eventlog to be excluded."
            value = {{
                var arr = macro("$IcingaCheckEventlog_Array_ExcludeEntryType$");
                if (len(arr) == 0) {
                return "@()";
                }
                return arr.join(",");
            }}
            order = 10
        }
        "-IncludeEntryType" = {
            description = "Used to specify an array of entry types within the eventlog to be included."
            value = {{
                var arr = macro("$IcingaCheckEventlog_Array_IncludeEntryType$");
                if (len(arr) == 0) {
                return "@()";
                }
                return arr.join(",");
            }}
            order = 9
        }
        "-Verbosity" = {
            value = "$IcingaCheckEventlog_Int32_Verbosity$"
            order = 17
        }
        "-ExcludeEventId" = {
            description = "Used to specify an array of events identified by their id to be excluded."
            value = {{
                var arr = macro("$IcingaCheckEventlog_Array_ExcludeEventId$");
                if (len(arr) == 0) {
                return "@()";
                }
                return arr.join(",");
            }}
            order = 6
        }
        "-Critical" = {
            description = "Used to specify a Critical threshold."
            value = "$IcingaCheckEventlog_Object_Critical$"
            order = 3
        }
        "-DisableTimeCache" = {
            set_if = "$IcingaCheckEventlog_Switchparameter_DisableTimeCache$"
            set_if_format = "string"
            order = 99
        }
        "-Warning" = {
            description = "Used to specify a Warning threshold."
            value = "$IcingaCheckEventlog_Object_Warning$"
            order = 2
        }
        "-IncludeUsername" = {
            description = "Used to specify an array of usernames within the eventlog to be included."
            value = {{
                var arr = macro("$IcingaCheckEventlog_Array_IncludeUsername$");
                if (len(arr) == 0) {
                return "@()";
                }
                return arr.join(",");
            }}
            order = 7
        }
        "-ExcludeMessage" = {
            description = "Used to specify an array of messages within the eventlog to be excluded."
            value = {{
                var arr = macro("$IcingaCheckEventlog_Array_ExcludeMessage$");
                if (len(arr) == 0) {
                return "@()";
                }
                return arr.join(",");
            }}
            order = 12
        }
    }
    vars.IcingaCheckEventlog_Switchparameter_NoPerfData = False
    vars.IcingaCheckEventlog_Switchparameter_DisableTimeCache = False
}
