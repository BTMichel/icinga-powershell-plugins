object CheckCommand "Invoke-IcingaCheckTCP" {
    import "PowerShell Base"

    arguments += {
        "-C" = {
            value = "try { Use-Icinga; } catch { Write-Output 'The Icinga PowerShell Framework is either not installed on the system or not configured properly. Please check https://icinga.com/docs/windows for further details'; exit 3; }; Exit-IcingaPluginNotInstalled 'Invoke-IcingaCheckTCP'; exit Invoke-IcingaCheckTCP"
            order = 0
        }
        "-Verbosity" = {
            description = "Changes the behavior of the plugin output which check states are printed: 0 (default): Only service checks/packages with state not OK will be printed 1: Only services with not OK will be printed including OK checks of affected check packages including Package config 2: Everything will be printed regardless of the check state"
            value = "$IcingaCheckTCP_Object_Verbosity$"
            order = 6
        }
        "-Warning" = {
            description = "A warning threshold for the connection time in seconds. Allows the usage of unit additions, like 100ms.  Allowed units: ms, s, m, h, d, w, M, y"
            value = "$IcingaCheckTCP_Object_Warning$"
            order = 4
        }
        "-Address" = {
            description = "The IP address or FQDN of the target host"
            value = "$IcingaCheckTCP_String_Address$"
            order = 2
        }
        "-Negate" = {
            set_if = "$IcingaCheckTCP_Switchparameter_Negate$"
            order = 99
        }
        "-Critical" = {
            description = "A critical threshold for the connection time in seconds. Allows the usage of unit additions, like 100ms.  Allowed units: ms, s, m, h, d, w, M, y"
            value = "$IcingaCheckTCP_Object_Critical$"
            order = 5
        }
        "-NoPerfData" = {
            set_if = "$IcingaCheckTCP_Switchparameter_NoPerfData$"
            order = 99
        }
        "-Ports" = {
            description = "A single or a list of ports to check on the target address"
            value = {{
                var arr = macro("$IcingaCheckTCP_Array_Ports$");
                if (len(arr) == 0) {
                return "@()";
                }
                return arr.join(",");
            }}
            order = 3
        }
    }
    vars.IcingaCheckTCP_Switchparameter_Negate = false
    vars.IcingaCheckTCP_Switchparameter_NoPerfData = false
}
