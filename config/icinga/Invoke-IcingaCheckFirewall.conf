object CheckCommand "Invoke-IcingaCheckFirewall" {
    import "PowerShell Base"

    arguments += {
        "-C" = {
            value = "try { Use-Icinga -Minimal; } catch { Write-Output 'The Icinga PowerShell Framework is either not installed on the system or not configured properly. Please check https://icinga.com/docs/windows for further details'; exit 3; }; Exit-IcingaExecutePlugin -Command 'Invoke-IcingaCheckFirewall' "
            order = 0
        }
        "-Verbosity" = {
            value = "$IcingaCheckFirewall_Int32_Verbosity$"
            order = 3
        }
        "-Profile" = {
            description = "Used to specify an array of profiles to check. Available profiles are 'Domain', 'Public', 'Private'"
            value = {{
                var arr = macro("$IcingaCheckFirewall_Array_Profile$");
                    if (len(arr) == 0) {
                        return "@()";
                    }
                    return arr.map(
                        x => if (typeof(x) == String) {
                            var argLen = len(x);
                            if (argLen != 0 && x.substr(0,1) == "'" && x.substr(argLen - 1, argLen) == "'") {
                                x;
                            } else {
                                "'" + x + "'";
                            }
                        } else {
                            x;
                        }
                    ).join(",");
            }}
            order = 2
        }
        "-ThresholdValue" = {
            description = "Change the value your defined threshold checks against from the current value to a collected time threshold of the Icinga for Windows daemon, as described here: https://icinga.com/docs/icinga-for-windows/latest/doc/service/10-Register-Service-Checks/ An example for this argument would be 1m or 15m which will use the average of 1m or 15m for monitoring."
            value = "$IcingaCheckFirewall_String_ThresholdValue$"
            order = 100
        }
        "-NoPerfData" = {
            set_if = "$IcingaCheckFirewall_Switchparameter_NoPerfData$"
            order = 99
        }
        "-Enabled" = {
            set_if = "$IcingaCheckFirewall_Switchparameter_Enabled$"
            order = 99
        }
    }
    vars.IcingaCheckFirewall_Switchparameter_Enabled = false
    vars.IcingaCheckFirewall_Switchparameter_NoPerfData = false
}
